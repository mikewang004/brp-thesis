void getrate(){

  char name[100];
  char dname[100];
  char fname[100];
  double g1,g2,g3;
  TF1 *gausfit = new TF1("gausfit", "[0]*exp(-0.5*((x-[1])/[2])**2) + [3]");


 sprintf(fname,"%s","jra_133_14421.root");

 TFile *f = new TFile(fname,"read");

 for (int du=1; du++;du<33){
  for (int floor=1;floor<19;floor++){

  sprintf(dname,"%s%i%s%i","Detector/DU",du,"/F",floor);
  sprintf(name,"%s%i%s%i%s","Detector/DU",du,"/F",floor,"/h_pmt_rate_distributions_Summaryslice");

  if (f->GetDirectory(dname)){

   TH2D* hi = (TH2D*)f->Get(name);

   for (int ch=1;ch<32;ch++){
     TH1D* proj = hi->ProjectionY("proj",ch,ch);

     g2=proj->GetMean();
    int n = proj->GetXaxis()->GetNbins();  
    std::vector<double> x(n);
    proj->GetXaxis()->GetCenter( &x[0] );
    const double *y = proj->GetArray(); 

     gausfit->SetParameter(0,proj->GetMaximum());
     gausfit->SetParameter(1,proj->GetXaxis()->GetBinCenter(proj->GetMaximumBin()));
     gausfit->SetParameter(2,1.);
    
     g2=proj->GetXaxis()->GetBinCenter(proj->GetMaximumBin());
     int fitStatus=proj->Fit("gausfit","OQ");


     if (fitStatus>=0&& proj->GetFunction("gausfit")->GetParameter(1)>1000){
      g1=proj->GetFunction("gausfit")->GetParameter(0);
      g2=proj->GetFunction("gausfit")->GetParameter(1);
      g3=proj->GetFunction("gausfit")->GetParameter(2);

//=================  these lines are only to demonstrate plotting the histogram
    if (g2 > 1.){
     proj->GetXaxis()->SetRangeUser(0.,20.);
     proj->Draw();
     return;
    }
//=======================================================

   }

     cout << du << " " << floor << " " << ch << " " << g2 <<  endl;
}
  }
 }
}
return;
}
